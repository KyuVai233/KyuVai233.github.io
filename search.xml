<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学习设计模式</title>
      <link href="/2024/03/25/%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2024/03/25/%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="学习设计模式"><a href="#学习设计模式" class="headerlink" title="学习设计模式"></a>学习设计模式</h1><h2 id="设计模式分类："><a href="#设计模式分类：" class="headerlink" title="设计模式分类："></a>设计模式分类：</h2><blockquote><ol><li>创造型</li></ol></blockquote><ul><li>主要关注创造对象的过程，隐藏创造逻辑。<blockquote><ol start="2"><li>结构型</li></ol></blockquote></li><li>主要管理类和对象的组合，形成较大的结构的同时保持结构的灵活性和高效性。<blockquote><ol start="3"><li>行为型</li></ol></blockquote></li><li>主要优化对象间的交互和职责分配。</li></ul><h2 id="创造型："><a href="#创造型：" class="headerlink" title="创造型："></a>创造型：</h2><h3 id="一-工厂方法模式"><a href="#一-工厂方法模式" class="headerlink" title="一.工厂方法模式"></a>一.工厂方法模式</h3><h4 id="要素："><a href="#要素：" class="headerlink" title="要素："></a>要素：</h4><blockquote><ol><li><b>抽象产品</b>：产品基类</li><li><b>具体产品</b>：继承抽象产品，即要生产的对象</li><li><b>抽象工厂&#x2F;创建者</b>：工厂基类，提供统一的抽象创造方法（接口），由具体工厂实现（重写）<i>(可省略？)</i></li><li><b>具体工厂</b>：继承抽象工厂，实现（重写）抽象工厂的方法（接口），根据条件去创造具体产品</li></ol></blockquote><details><summary>点击展开查看 C++ 代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; Vector2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum class</span> <span class="title class_">Attribute</span> &#123; Ice, Grass, Fire &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameObject</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">GameObject</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">position</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">on_update</span><span class="params">(<span class="type">float</span> delta)</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">on_render</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">Vector2 position;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sword</span> : <span class="keyword">public</span> GameObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Sword</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">GameObject</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_update</span><span class="params">(<span class="type">float</span> delta)</span> <span class="keyword">override</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_render</span><span class="params">()</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;生成剑纹理&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Slime</span> : <span class="keyword">public</span> GameObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Slime</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">GameObject</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_update</span><span class="params">(<span class="type">float</span> delta)</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;slime 动画更新&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_render</span><span class="params">()</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;生成 slime 动画&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IceSword</span> : <span class="keyword">public</span> Sword</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">IceSword</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Sword</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrassSword</span> : <span class="keyword">public</span> Sword</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">GrassSword</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Sword</span>(_position) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FireSword</span> : <span class="keyword">public</span> Sword</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">FireSword</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Sword</span>(_position) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IceSlime</span> : <span class="keyword">public</span> Slime</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">IceSlime</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Slime</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrassSlime</span> : <span class="keyword">public</span> Slime</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">GrassSlime</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Slime</span>(_position) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FireSlime</span> : <span class="keyword">public</span> Slime</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">FireSlime</span>(<span class="type">const</span> Vector2&amp; _position) : <span class="built_in">Slime</span>(_position) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SwordFactory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">Sword* <span class="title">create</span><span class="params">(Attribute attribute, <span class="type">const</span> Vector2&amp; position)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (attribute)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> Attribute::Ice:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">IceSword</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Attribute::Grass:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">GrassSword</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Attribute::Fire:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">FireSword</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SlimeFactory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">Slime* <span class="title">create</span><span class="params">(Attribute attribute, <span class="type">const</span> Vector2&amp; position)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (attribute)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> Attribute::Ice:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">IceSlime</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Attribute::Grass:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">GrassSlime</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> Attribute::Fire:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">FireSlime</span>(position);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FactoryMethodPattern</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">FactoryMethodPattern</span>()</span><br><span class="line">&#123;</span><br><span class="line">SwordFactory sword_factory;</span><br><span class="line">SlimeFactory slime_factory;</span><br><span class="line"></span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(sword_factory.<span class="built_in">create</span>(Attribute::Ice, &#123; <span class="number">200</span>, <span class="number">100</span> &#125;));</span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(sword_factory.<span class="built_in">create</span>(Attribute::Grass, &#123; <span class="number">200</span>, <span class="number">300</span> &#125;));</span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(sword_factory.<span class="built_in">create</span>(Attribute::Fire, &#123; <span class="number">200</span>, <span class="number">500</span> &#125;));</span><br><span class="line"></span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(slime_factory.<span class="built_in">create</span>(Attribute::Ice, &#123; <span class="number">425</span>, <span class="number">140</span> &#125;));</span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(slime_factory.<span class="built_in">create</span>(Attribute::Grass, &#123; <span class="number">425</span>, <span class="number">340</span> &#125;));</span><br><span class="line">game_obj_list.<span class="built_in">push_back</span>(slime_factory.<span class="built_in">create</span>(Attribute::Fire, &#123; <span class="number">425</span>, <span class="number">540</span> &#125;));</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">FactoryMethodPattern</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (GameObject* game_obj : game_obj_list)</span><br><span class="line"><span class="keyword">delete</span> game_obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_update</span><span class="params">(<span class="type">float</span> delta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (GameObject* game_obj : game_obj_list)</span><br><span class="line">game_obj-&gt;<span class="built_in">on_update</span>(delta);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">on_render</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (GameObject* game_obj : game_obj_list)</span><br><span class="line">game_obj-&gt;<span class="built_in">on_render</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">std::vector&lt;GameObject*&gt; game_obj_list;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h4 id="优缺点："><a href="#优缺点：" class="headerlink" title="优缺点："></a>优缺点：</h4><blockquote><p><b>优点:</b></p><blockquote><ol><li>解耦客户端与具体类依赖</li></ol></blockquote></blockquote><ul><li>将产品的代码与使用该产品的客户端内容进行分离</li><li><i>譬如在游戏开发中，玩家类只需要依赖具体工厂类，无需关注产品类内部实现与构造需求</i><blockquote><blockquote><ol start="2"><li>提高系统的可扩展性</li></ol></blockquote></blockquote></li><li>引入新产品无需修改已有代码</li><li><i>引入新产品时，只需要构建新的具体工厂类</i><blockquote><blockquote><ol start="3"><li>封装复杂的对象创建逻辑</li></ol></blockquote></blockquote></li><li>工厂内部屏蔽对象创建和初始化的复杂操作<blockquote><blockquote><ol start="4"><li>遵循开闭原则和单一职责原则</li><li>提高可维护性</li></ol></blockquote></blockquote></li><li>将对象创建的代码逻辑集中在一起方便后续修改维护</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
